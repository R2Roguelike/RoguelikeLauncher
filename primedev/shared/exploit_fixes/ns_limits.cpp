#include "ns_limits.h"
#include "engine/hoststate.h"
#include "client/r2client.h"
#include "engine/r2engine.h"
#include "server/r2server.h"
#include "core/tier0.h"
#include "core/math/vector.h"

AUTOHOOK_INIT()

struct alignas(4) SV_CUserCmd
{
	DWORD command_number;
	DWORD tick_count;
	float command_time;
	Vector3 worldViewAngles;
	BYTE gap18[4];
	Vector3 localViewAngles;
	Vector3 attackangles;
	Vector3 move;
	DWORD buttons;
	BYTE impulse;
	short weaponselect;
	DWORD meleetarget;
	BYTE gap4C[24];
	char headoffset;
	BYTE gap65[11];
	Vector3 cameraPos;
	Vector3 cameraAngles;
	BYTE gap88[4];
	int tickSomething;
	DWORD dword90;
	DWORD predictedServerEventAck;
	DWORD dword98;
	float frameTime;
};

// clang-format off
AUTOHOOK(CPlayerMove__RunCommand, server.dll + 0x5B8100,
void, __fastcall, (void* self, CBasePlayer* player, SV_CUserCmd* pUserCmd, uint64_t a4))
// clang-format on
{
	CPlayerMove__RunCommand(self, player, pUserCmd, a4);
}

ON_DLL_LOAD_RELIESON("engine.dll", ServerLimits, ConVar, (CModule module))
{
	AUTOHOOK_DISPATCH_MODULE(engine.dll)

	g_pServerLimits = new ServerLimitsManager;
}

ON_DLL_LOAD("server.dll", ServerLimitsServer, (CModule module))
{
	AUTOHOOK_DISPATCH_MODULE(server.dll)
}
